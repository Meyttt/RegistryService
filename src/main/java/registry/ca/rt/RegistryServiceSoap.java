
package registry.ca.rt;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RegistryServiceSoap", targetNamespace = "http://rt.ca.registry/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RegistryServiceSoap {


    /**
     * 
     * @return
     *     returns registry.ca.rt.ArrayOfCAWebDto
     */
    @WebMethod(operationName = "GetCAList", action = "http://rt.ca.registry/GetCAList")
    @WebResult(name = "GetCAListResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetCAList", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetCAList")
    @ResponseWrapper(localName = "GetCAListResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetCAListResponse")
    public ArrayOfCAWebDto getCAList();

    /**
     * 
     * @param haveReportToThisDate
     * @return
     *     returns registry.ca.rt.CAStatusReport
     */
    @WebMethod(operationName = "GetStatusReport", action = "http://rt.ca.registry/GetStatusReport")
    @WebResult(name = "GetStatusReportResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetStatusReport", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetStatusReport")
    @ResponseWrapper(localName = "GetStatusReportResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetStatusReportResponse")
    public CAStatusReport getStatusReport(
        @WebParam(name = "haveReportToThisDate", targetNamespace = "http://rt.ca.registry/")
        XMLGregorianCalendar haveReportToThisDate);

    /**
     * 
     * @param crossesInBase64
     * @param caGuid
     * @return
     *     returns registry.ca.rt.CASignedByClientDto
     */
    @WebMethod(operationName = "AddCrossesToCAGetHash", action = "http://rt.ca.registry/AddCrossesToCAGetHash")
    @WebResult(name = "AddCrossesToCAGetHashResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "AddCrossesToCAGetHash", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.AddCrossesToCAGetHash")
    @ResponseWrapper(localName = "AddCrossesToCAGetHashResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.AddCrossesToCAGetHashResponse")
    public CASignedByClientDto addCrossesToCAGetHash(
        @WebParam(name = "caGuid", targetNamespace = "http://rt.ca.registry/")
        String caGuid,
        @WebParam(name = "crossesInBase64", targetNamespace = "http://rt.ca.registry/")
        ArrayOfString crossesInBase64);

    /**
     * 
     * @param signData
     * @param crossesInBase64
     * @param caGuid
     */
    @WebMethod(operationName = "AddCrossesToCADoAdd", action = "http://rt.ca.registry/AddCrossesToCADoAdd")
    @RequestWrapper(localName = "AddCrossesToCADoAdd", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.AddCrossesToCADoAdd")
    @ResponseWrapper(localName = "AddCrossesToCADoAddResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.AddCrossesToCADoAddResponse")
    public void addCrossesToCADoAdd(
        @WebParam(name = "caGuid", targetNamespace = "http://rt.ca.registry/")
        String caGuid,
        @WebParam(name = "crossesInBase64", targetNamespace = "http://rt.ca.registry/")
        ArrayOfString crossesInBase64,
        @WebParam(name = "signData", targetNamespace = "http://rt.ca.registry/")
        CASignedByClientDto signData);

    /**
     * 
     * @param certRequest
     * @return
     *     returns registry.ca.rt.CrossRequestRegistryInfo
     */
    @WebMethod(operationName = "GetCrossRequestRegistryInfo", action = "http://rt.ca.registry/GetCrossRequestRegistryInfo")
    @WebResult(name = "GetCrossRequestRegistryInfoResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetCrossRequestRegistryInfo", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetCrossRequestRegistryInfo")
    @ResponseWrapper(localName = "GetCrossRequestRegistryInfoResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetCrossRequestRegistryInfoResponse")
    public CrossRequestRegistryInfo getCrossRequestRegistryInfo(
        @WebParam(name = "certRequest", targetNamespace = "http://rt.ca.registry/")
        byte[] certRequest);

    /**
     * 
     * @param includeData
     * @return
     *     returns registry.ca.rt.ArrayOfTSLInfo
     */
    @WebMethod(operationName = "GetTSLInfos", action = "http://rt.ca.registry/GetTSLInfos")
    @WebResult(name = "GetTSLInfosResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetTSLInfos", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetTSLInfos")
    @ResponseWrapper(localName = "GetTSLInfosResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetTSLInfosResponse")
    public ArrayOfTSLInfo getTSLInfos(
        @WebParam(name = "includeData", targetNamespace = "http://rt.ca.registry/")
        boolean includeData);

    /**
     * 
     * @param haveNumber
     * @param schemaVersion
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetLatestTSL", action = "http://rt.ca.registry/GetLatestTSL")
    @WebResult(name = "GetLatestTSLResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetLatestTSL", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetLatestTSL")
    @ResponseWrapper(localName = "GetLatestTSLResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetLatestTSLResponse")
    public byte[] getLatestTSL(
        @WebParam(name = "schemaVersion", targetNamespace = "http://rt.ca.registry/")
        int schemaVersion,
        @WebParam(name = "haveNumber", targetNamespace = "http://rt.ca.registry/")
        Integer haveNumber);

    /**
     * 
     * @param certs
     */
    @WebMethod(operationName = "UpdateUFOCerts", action = "http://rt.ca.registry/UpdateUFOCerts")
    @RequestWrapper(localName = "UpdateUFOCerts", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.UpdateUFOCerts")
    @ResponseWrapper(localName = "UpdateUFOCertsResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.UpdateUFOCertsResponse")
    public void updateUFOCerts(
        @WebParam(name = "certs", targetNamespace = "http://rt.ca.registry/")
        ArrayOfCertInfoDto certs);

    /**
     * 
     * @return
     *     returns registry.ca.rt.ArrayOfUFOCertInfo
     */
    @WebMethod(operationName = "GetUFOCertInfos", action = "http://rt.ca.registry/GetUFOCertInfos")
    @WebResult(name = "GetUFOCertInfosResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetUFOCertInfos", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetUFOCertInfos")
    @ResponseWrapper(localName = "GetUFOCertInfosResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetUFOCertInfosResponse")
    public ArrayOfUFOCertInfo getUFOCertInfos();

    /**
     * 
     * @param thumbprints
     * @return
     *     returns registry.ca.rt.ArrayOfCertInfoDto
     */
    @WebMethod(operationName = "GetUFOCerts", action = "http://rt.ca.registry/GetUFOCerts")
    @WebResult(name = "GetUFOCertsResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetUFOCerts", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetUFOCerts")
    @ResponseWrapper(localName = "GetUFOCertsResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetUFOCertsResponse")
    public ArrayOfCertInfoDto getUFOCerts(
        @WebParam(name = "thumbprints", targetNamespace = "http://rt.ca.registry/")
        ArrayOfString thumbprints);

    /**
     * 
     * @return
     *     returns registry.ca.rt.ArrayOfString
     */
    @WebMethod(operationName = "GetBadCACertThumbprints", action = "http://rt.ca.registry/GetBadCACertThumbprints")
    @WebResult(name = "GetBadCACertThumbprintsResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetBadCACertThumbprints", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetBadCACertThumbprints")
    @ResponseWrapper(localName = "GetBadCACertThumbprintsResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetBadCACertThumbprintsResponse")
    public ArrayOfString getBadCACertThumbprints();

    /**
     * 
     * @param thumbprints
     * @return
     *     returns registry.ca.rt.ArrayOfCertInfoDto
     */
    @WebMethod(operationName = "GetBadCACerts", action = "http://rt.ca.registry/GetBadCACerts")
    @WebResult(name = "GetBadCACertsResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetBadCACerts", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetBadCACerts")
    @ResponseWrapper(localName = "GetBadCACertsResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetBadCACertsResponse")
    public ArrayOfCertInfoDto getBadCACerts(
        @WebParam(name = "thumbprints", targetNamespace = "http://rt.ca.registry/")
        ArrayOfString thumbprints);

    /**
     * 
     * @param version
     * @return
     *     returns registry.ca.rt.ArrayOfCertificateDto
     */
    @WebMethod(operationName = "GetCertificates", action = "http://rt.ca.registry/GetCertificates")
    @WebResult(name = "GetCertificatesResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetCertificates", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetCertificates")
    @ResponseWrapper(localName = "GetCertificatesResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetCertificatesResponse")
    public ArrayOfCertificateDto getCertificates(
        @WebParam(name = "version", targetNamespace = "http://rt.ca.registry/")
        byte[] version);

    /**
     * 
     * @param version
     * @return
     *     returns registry.ca.rt.ArrayOfInfoExchangeLogItemDto
     */
    @WebMethod(operationName = "GetInfoExchangeLogItems", action = "http://rt.ca.registry/GetInfoExchangeLogItems")
    @WebResult(name = "GetInfoExchangeLogItemsResult", targetNamespace = "http://rt.ca.registry/")
    @RequestWrapper(localName = "GetInfoExchangeLogItems", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetInfoExchangeLogItems")
    @ResponseWrapper(localName = "GetInfoExchangeLogItemsResponse", targetNamespace = "http://rt.ca.registry/", className = "registry.ca.rt.GetInfoExchangeLogItemsResponse")
    public ArrayOfInfoExchangeLogItemDto getInfoExchangeLogItems(
        @WebParam(name = "version", targetNamespace = "http://rt.ca.registry/")
        byte[] version);

}
